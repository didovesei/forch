#!/bin/bash

source bin/stack_functions

preamble_setup

export CONTROLLER_NAME=127.0.0.1

FORCH_VARZ_PORT=8302

function test_counting {
    fdesc=counting-$1
    fout_dir=$OUT_DIR/$fdesc
    mkdir -p $fout_dir

    echo Starting $fdesc tests | tee -a $TEST_RESULTS
    echo $fout_dir
    fetch_forch switch_state

    api_result=$fout_dir/switch_state.json

    for sw in 1 2; do
        for port in 1 2; do
            for acl in 0 1; do
                jq ".switches.\"nz-kiwi-t2sw$sw\".ports.\"$port\".acls[$acl].rules[0].rule_description" $api_result | tee -a $TEST_RESULTS
                jq ".switches.\"nz-kiwi-t2sw$sw\".ports.\"$port\".acls[$acl].rules[0].packet_count" $api_result | tee -a $TEST_RESULTS
                interval_count=$(jq ".switches.\"nz-kiwi-t2sw$sw\".ports.\"$port\".acls[$acl].rules[0].interval_change_count" $api_result)
                echo $((interval_count > 0)) | tee -a $TEST_RESULTS
            done
        done
    done

    metrics=$(wget localhost:$FORCH_VARZ_PORT -O- 2>/dev/null)
    grep 'interval_change_count' <<< $metrics | grep '9a:02:57:1e:8f:01' | grep 'allow ICMP' | awk '{print $3}' | tee -a $TEST_RESULTS
}

echo Setting up stack and Forch...
bin/setup_counting local
sleep 20

test_counting initial

echo Generating ARP and ICMP traffic...
docker exec forch-faux-1 ping -c 5 192.168.1.3 2>&1
docker exec forch-faux-2 ping -c 5 192.168.1.3 2>&1
docker exec forch-faux-4 ping -c 5 192.168.1.1 2>&1
sleep 20

test_counting basic
